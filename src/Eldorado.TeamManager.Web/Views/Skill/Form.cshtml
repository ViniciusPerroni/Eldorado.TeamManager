@using Eldorado.TeamManager.Domain.Enums;
@model Eldorado.TeamManager.Web.Models.Skill.SkillViewModel

<h3 class="page-title-skill">@(Model.Skill.Id == 0 ? "Nova Skill" : "Editar Skill")</h3>

<form id="form" action="@Url.Action("Save")" method="post" class="g-3">
    <input type="hidden" name="Id" value="@Model.Skill.Id" />

    <div class="row mb-3">
        <div class="col-md-5">
            <label class="form-label">Nome:</label>
            <input type="text" name="Name" value="@Model.Skill.Name" required class="form-control" id="name-skill" />
        </div>
        <div class="col-md-3">
            <label class="form-label">Tipo:</label>
            <select class="form-select" name="Type" asp-for="@Model.Skill.Type" required>
                <option value="" data-default disabled selected></option>
                <option @(Model.Skill.Type == SkillType.DataBase ? "selected" : string.Empty) value='DataBase'>Banco
                    de Dados</option>
                <option @(Model.Skill.Type == SkillType.ProgrammingLanguage ? "selected" : string.Empty)
                    value='ProgrammingLanguage'>Linguagem de Programação</option>
                <option @(Model.Skill.Type == SkillType.SoftwareTools ? "selected" : string.Empty)
                    value='SoftwareTools'>
                    Ferramentas de Software</option>
                <option @(Model.Skill.Type == SkillType.FrameWork ? "selected" : string.Empty) value='Framework'>
                    Framework
                </option>
                <option @(Model.Skill.Type == SkillType.Methodology ? "selected" : string.Empty) value='Methodology'>
                    Metodologia</option>
                <option @(Model.Skill.Type == SkillType.DevOpsInfrastructure ? "selected" : string.Empty)
                    value='DevOpsInfrastructure'>Infraestrutura DevOps</option>
            </select>
        </div>
    </div>

    <div class="row">
        <div class="col-md-8 mb-4">
            <label class="form-label">Descrição:</label>
            <textarea id="description" type="text" maxlength="150" rows="3" name="Description" required
                class="form-control">@Model.Skill.Description</textarea>
        </div>
    </div>

    <div class="row">
        <div class="col-8 buttons-lixeira-voltar">
            <a href='@Url.Action("Index")' class="btn btn-outline-secondary ms-2"><i class="fa fa-left-long"></i>
                Voltar</a>
            <button type="submit" class="btn btn-secondary"  id="buttonSubmitForm" OnClick="Validate()"> <i class="fa fa-save"></i>
                Gravar</button>
        </div>
    </div>
</form>

<script>
    function Validate() {
        const form = document.getElementById("form");
        const inputedNameSkill = document.getElementById("name-skill").value
        const inputedDescription = document.getElementById("description").value

        if (inputedNameSkill.trim().length === 0 || inputedDescription.trim().length === 0) {
            event.preventDefault();
            alert("Os campos não podem ser vazios!");
        }

        form.addEventListener("submit", function (event) {
            document.getElementById("name-skill").value = inputedNameSkill.trim();
            document.getElementById("description").value = inputedDescription.trim();
        });
    }
</script>

